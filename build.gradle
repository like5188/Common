// buildscript中的声明是gradle脚本自身需要使用的资源。可以声明的资源包括依赖项、第三方插件、maven仓库地址等
buildscript {
    // ext是自定义属性，通常用于统一管理所有第三方插件的版本号
    ext.kotlin_version = '1.6.10'
    // 顾名思义就是仓库的意思啦，而jcenter()、maven()和google()就是托管第三方插件的平台
    repositories {
        google()
        mavenCentral()
    }
    // 当然配置了仓库还不够，我们还需要在dependencies{}里面的配置里，把需要配置的依赖用classpath配置上，因为这个dependencies在buildscript{}里面，所以代表的是Gradle需要的插件。
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// allprojects块的repositories用于多项目构建，为所有项目提供共同所需依赖包。
// 而子项目可以配置自己的repositories以获取自己独需的依赖包。
allprojects {
    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        google()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// assemble：对所有的 buildType 生成 apk 包。
// clean:移除所有的编译输出文件，比如apk
// check:执行lint检测编译。
// build:同时执行assemble和check命令
